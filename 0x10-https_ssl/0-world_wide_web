#!/usr/bin/env bash
# this script configures your domain zone so that the subdomain www points to your load balancers IP
:<<'END_COMMENT'
Add the subdomain www to your domain, point it to your lb-01 IP (your domain name might be configured with default subdomains, feel free to remove them)
Add the subdomain lb-01 to your domain, point it to your lb-01 IP
Add the subdomain web-01 to your domain, point it to your web-01 IP
Add the subdomain web-02 to your domain, point it to your web-02 IP

The Bash script must accept 2 arguments:
domain:
type: string
what: domain name to audit
mandatory: yes
subdomain:
type: string
what: specific subdomain to audit
mandatory: no
Output: The subdomain [SUB_DOMAIN] is a [RECORD_TYPE] record and points to [DESTINATION]
When only the parameter domain is provided, display information for its subdomains www, lb-01, web-01 and web-02 - in this specific order
When passing domain and subdomain parameters, display information for the specified subdomain
END_COMMENT

SUB_DOMAIN=("www" "lb-01" "web-01" "web-02")
domain_subdomain ()
{
	# ensure there are two arguments passed
	if [ "$#" -lt 1  ]
	then
		echo "usage: <$0> <arg1: domain> <arg2: subdomain>"
		echo "Both arguments type: string. Subdomain is optional"
		return 1
	fi

	domain=$1
	# if only domain is passed
	if [ "$#" -eq 1 ]
	then
		for sub in "${SUB_DOMAIN[@]}"
		do
			ip=$(dig "$sub.$domain" +short)
			typ=$(dig "$sub.$domain" | grep -A1 'ANSWER SECTION:' | awk '{printf $4}')
			echo "The subdomain $sub is a $typ record and points to $ip"
		done
	# if domain and subdomain are passed
	elif [ "$#" -eq 2 ]
	then
		ip=$(dig "$2.$domain" +short)
		typ=$(dig "$2.$domain" | grep -A1 'ANSWER SECTION:' | awk '{printf $4}')
		echo "The subdomain $2 is a $typ record and points to $ip"
	fi
}

# call the function with provided arguments
domain_subdomain "$@"
